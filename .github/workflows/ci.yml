name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Install dependencies
      run: npm install
    
    - name: Run tests
      run: npm run test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Install dependencies
      run: npm install
    
    - name: Run lint
      run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t firebase-emulators:test .
    
    - name: Test Docker image
      run: |
        docker run -d --name firebase-test -p 5179:5179 firebase-emulators:test
        sleep 10
        curl -f http://localhost:5179 || (docker logs firebase-test && exit 1)
        docker stop firebase-test && docker rm firebase-test

  release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          charlesgreen/firebase-emulators:latest
          charlesgreen/firebase-emulators:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max