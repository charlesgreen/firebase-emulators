# Example: How to add Firebase Emulators to your existing Docker Compose setup
# This shows different patterns for integrating the emulators service

version: '3.8'

services:
  # Your existing application services
  web:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - FIREBASE_PROJECT_ID=my-project
      # Connect to Firebase emulators
      - FIRESTORE_EMULATOR_HOST=firebase-emulators:5172
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:5171
      - FIREBASE_STORAGE_EMULATOR_HOST=firebase-emulators:5175
    depends_on:
      firebase-emulators:
        condition: service_healthy
    networks:
      - app-network

  api:
    build: ./api
    ports:
      - "4000:4000"
    environment:
      - FIREBASE_PROJECT_ID=my-project
      - FIRESTORE_EMULATOR_HOST=firebase-emulators:5172
      - FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:5171
    depends_on:
      firebase-emulators:
        condition: service_healthy
    networks:
      - app-network

  # Firebase Emulators Service
  firebase-emulators:
    image: charlesgreen/firebase-emulators:latest
    container_name: my-project-firebase-emulators
    restart: unless-stopped
    
    ports:
      # Expose UI for development (optional in production)
      - "5179:5179"  # Firebase UI
      # Expose individual emulators if needed from host
      - "5171:5171"  # Auth (optional)
      - "5172:5172"  # Firestore (optional)
      - "5175:5175"  # Storage (optional)
    
    environment:
      - FIREBASE_PROJECT_ID=my-project
      - GOOGLE_CLOUD_PROJECT=my-project
      
      # Enable only what you need
      - ENABLE_AUTH=true
      - ENABLE_FIRESTORE=true
      - ENABLE_STORAGE=true
      - ENABLE_HOSTING=false  # Usually not needed in containerized apps
      
      # Development seed data
      - SEED_DATA=${SEED_DATA:-false}
      - SEED_AUTH=${SEED_AUTH:-false}
      - SEED_FIRESTORE=${SEED_FIRESTORE:-false}
      
      - NODE_ENV=${NODE_ENV:-development}
    
    volumes:
      # Mount your Firebase configuration
      - ./firebase.json:/app/config/firebase.json:ro
      - ./firestore.rules:/app/config/firestore.rules:ro
      - ./storage.rules:/app/config/storage.rules:ro
      
      # Optional: Mount custom seed data
      # - ./seed-data:/app/seed:ro
      
      # Persistent data for development
      - firebase_data:/app/data
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5179"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    
    networks:
      - app-network

  # Optional: Database for your app (Firebase emulators are separate)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  firebase_data:
    driver: local
  postgres_data:
    driver: local

# Production override example
# Create docker-compose.prod.yml:
# version: '3.8'
# services:
#   firebase-emulators:
#     environment:
#       - NODE_ENV=production
#       - SEED_DATA=false
#     ports:
#       - "5179"  # Remove UI exposure in production